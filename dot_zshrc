source ~/.secrets
export PATH=/opt/homebrew/bin:$PATH
export PATH=/opt/homebrew/sbin:$PATH
export PATH=/opt/homebrew/sbin:$PATH


# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="powerlevel10k/powerlevel10k"
HYPHEN_INSENSITIVE="true"
zstyle ':omz:update' mode reminder  # just remind me to update when it's time
ENABLE_CORRECTION="true"
plugins=(
  git
  zsh-autosuggestions
  zsh-syntax-highlighting
  fast-syntax-highlighting
  zsh-autocomplete
 )
source $ZSH/oh-my-zsh.sh
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh



# Preferred editor for local and remote sessions
 if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='vim'
 else
   export EDITOR='mvim'
 fi

#Aliases
alias ll='ls -la'
alias chez="chezmoi"
alias vim="nvim"
alias ai="chatblade"
alias lf="lfcd"
#Alias for publishing dotnet
alias publish-linux="dotnet publish -c Release --self-contained true -r linux-x64 --output ./Release/linux-x64 --framework net7.0 /p:PublishSingleFile=true /p:PublishTrimmed=true"
alias publish-macos="dotnet publish -c Release --self-contained true -r osx-x64 --output ./Release/macos-x64 --framework net7.0 /p:PublishSingleFile=true /p:PublishTrimmed=true"
alias publish-windows="dotnet publish -c Release --self-contained true -r win-x64 --output ./Release/windows-x64 --framework net7.0 /p:PublishSingleFile=true /p:PublishTrimmed=true"
alias publish-macos-arm="dotnet publish -c Release --self-contained true -r osx-arm64 --output ./Release/macos-arm64 --framework net7.0 /p:PublishSingleFile=true /p:PublishTrimmed=true"
alias publish-linux-arm="dotnet publish -c Release --self-contained true -r linux-arm64 --output ./Release/linux-arm64 --framework net7.0 /p:PublishSingleFile=true /p:PublishTrimmed=true"


#Some prompt primers for chatblade
#export shell="Convert the following natural language request to zsh code do not include anything other than the commands:"

#vi mode for zsh
bindkey -v

#Weird Mac Settings to disable
defaults write -g ApplePressAndHoldEnabled -bool false

#Setup SSH keys
sshKeyPath="$HOME/.ssh/id_rsa"

if [ ! -f "$sshKeyPath" ]; then
    ssh-keygen -t rsa -b 4096 -f "$sshKeyPath"
fi
# change dir on lf exit
lfcd () {
    tmp="$(mktemp)"
    # `command` is needed in case `lfcd` is aliased to `lf`
    command lf -last-dir-path="$tmp" "$@"
    if [ -f "$tmp" ]; then
        dir="$(cat "$tmp")"
        rm -f "$tmp"
        if [ -d "$dir" ]; then
            if [ "$dir" != "$(pwd)" ]; then
                cd "$dir"
            fi
        fi
    fi
}

#LF Paste progress bar
cmd paste &{{
    set -- $(cat ~/.local/share/lf/files)
    mode="$1"
    shift
    case "$mode" in
        copy)
            rsync -av --ignore-existing --progress -- "$@" . |
            stdbuf -i0 -o0 -e0 tr '\r' '\n' |
            while IFS= read -r line; do
                lf -remote "send $id echo $line"
            done
            ;;
        move) mv -n -- "$@" .;;
    esac
    rm ~/.local/share/lf/files
    lf -remote "send clear"
}}
